{"version":3,"file":"Pencil.stories-39549730.js","sources":["../../src/components/Pencil.vue"],"sourcesContent":["<template>\r\n  <div class=\"pencil-input\" :style=\"currentStyle\">\r\n    <div class=\"pencil-input__show\">\r\n      <div\r\n        v-show=\"!editMode\"\r\n        class=\"pencil-input__text\"\r\n        data-e2e=\"pencil-input-text\"\r\n        :class=\"`pencil-text-${idRandom}`\"\r\n      >\r\n        <Tooltip v-if=\"isShowTooltip\" placement=\"top\" :color=\"`#051322e6`\">\r\n          <template #title>\r\n            <div>{{ showText }}</div>\r\n          </template>\r\n          <div class=\"display__dot\">{{ showText }}</div>\r\n        </Tooltip>\r\n        <div v-else class=\"display__dot\">{{ showText }}</div>\r\n      </div>\r\n      <div\r\n        v-show=\"!editMode\"\r\n        class=\"pencil-input__icon\"\r\n        data-e2e=\"pencil\"\r\n        @click.prevent=\"clickPen\"\r\n      >\r\n        <EditOutlined style=\"color: #969ca1; font-size: 15px\" />\r\n      </div>\r\n    </div>\r\n    <div\r\n      v-show=\"editMode\"\r\n      class=\"pencil-input__wrapper\"\r\n      :class=\"{ error: countOversize || apiFeedbackError || showInvaildText }\"\r\n    >\r\n      <Input\r\n        :id=\"`pencil-input-${idRandom}`\"\r\n        v-model:value=\"inputText\"\r\n        class=\"pencil-input\"\r\n        data-e2e=\"pencil-input\"\r\n        @pressEnter=\"pressEnter\"\r\n        @change=\"(payload) => $emit('change', payload.target.value)\"\r\n      />\r\n      <div class=\"pencil-input__count\">{{ count }}/{{ limitCount }}</div>\r\n    </div>\r\n    <div v-show=\"apiFeedbackError && editMode\" class=\"pencil-input__error\">\r\n      {{ apiErrorText }}\r\n    </div>\r\n    <div v-show=\"showInvaildText\" class=\"pencil-input__error\">\r\n      {{ invaildText }}\r\n    </div>\r\n  </div>\r\n</template>\r\n<script lang=\"ts\" setup>\r\nimport { ref, watch, computed, nextTick, onMounted } from 'vue';\r\nimport { Input, Tooltip } from 'ant-design-vue';\r\nimport { EditOutlined } from '@ant-design/icons-vue';\r\nimport { rexEngNum, noAllowedCharacter, handlerValidation } from '../utils/rexValidation';\r\n\r\ninterface Props {\r\n  text?: string;\r\n  limitCount?: number;\r\n  invaildText?: string;\r\n  apiErrorText?: string;\r\n  apiError?: boolean;\r\n  size?: string;\r\n}\r\n\r\nconst props = withDefaults(defineProps<Props>(), {\r\n  text: '',\r\n  limitCount: 100,\r\n  invaildText: 'Invalid name',\r\n  apiErrorText: 'Name already exists!',\r\n  apiError: false,\r\n  size: 'default',\r\n});\r\n\r\ninterface Emits {\r\n  // eslint-disable-next-line no-unused-vars\r\n  (e: 'pressEnter', payload: string): void;\r\n  // eslint-disable-next-line no-unused-vars\r\n  (e: 'editModeEvent', payload: boolean): void;\r\n  // eslint-disable-next-line no-unused-vars\r\n  (e: 'change', payload: string): void;\r\n  // eslint-disable-next-line no-unused-vars\r\n  (e: 'triggerInvalid', payload: string): void;\r\n}\r\n\r\nconst emit = defineEmits<Emits>();\r\nconst smallStyle: any = {\r\n  '--text-max-width': '266px',\r\n  '--text-size': '16px',\r\n  '--count-size': '12px',\r\n  '--height': '24px',\r\n  '--text-justify': 'space-between',\r\n  '--wrapper-width': 'auto',\r\n  '--input-maxWidth': 'auto',\r\n};\r\nconst defaultStyle: any = {\r\n  '--text-max-width': '406px',\r\n  '--text-size': '24px',\r\n  '--count-size': '14px',\r\n  '--height': '40px',\r\n  '--text-justify': 'flex-start',\r\n  '--wrapper-width': 'fit-content',\r\n  '--input-maxWidth': '380px',\r\n};\r\nconst currentStyle = computed(() => {\r\n  if (props.size === 'default') return defaultStyle;\r\n  return smallStyle;\r\n});\r\nconst showText = ref<string>(props.text);\r\nconst originalText = ref<string>(props.text);\r\nconst inputText = ref<string>('');\r\nconst editMode = ref<boolean>(false);\r\nconst apiFeedbackError = ref<boolean>(false);\r\nconst showInvaildText = ref<boolean>(false);\r\nconst idRandom = Math.floor(Math.random() * 100000);\r\nconst validation = ref<boolean>(true);\r\nconst isShowTooltip = ref<boolean>(false);\r\nconst countOversize = computed(() => {\r\n  if (inputText.value.length > props.limitCount) return true;\r\n  return false;\r\n});\r\nconst count = computed(() => inputText.value.length);\r\nconst handlerPencilTooltip = (tagElement: string) => {\r\n  nextTick(() => {\r\n    isShowTooltip.value = false;\r\n    const element = document.querySelector(`.${tagElement}`);\r\n    const styleWidth = parseInt(currentStyle.value['--text-max-width'].slice(0, 3), 10);\r\n    if (element && element.clientWidth >= styleWidth) {\r\n      isShowTooltip.value = true;\r\n    }\r\n  });\r\n};\r\nconst pressCancel = () => {\r\n  editMode.value = false;\r\n  inputText.value = '';\r\n  apiFeedbackError.value = false;\r\n  showInvaildText.value = false;\r\n  validation.value = true;\r\n  showText.value = originalText.value;\r\n  emit('editModeEvent', false);\r\n};\r\nconst pressEnter = () => {\r\n  if (inputText.value === originalText.value) {\r\n    pressCancel();\r\n  } else {\r\n    validation.value = handlerValidation(inputText.value, rexEngNum, noAllowedCharacter);\r\n    if (inputText.value.length < 1 || !validation.value) {\r\n      emit('triggerInvalid', inputText.value);\r\n      showInvaildText.value = true;\r\n    } else if (!countOversize.value) {\r\n      emit('pressEnter', inputText.value);\r\n      editMode.value = false;\r\n      apiFeedbackError.value = false;\r\n      showInvaildText.value = false;\r\n      validation.value = false;\r\n      showText.value = inputText.value;\r\n      inputText.value = '';\r\n      emit('editModeEvent', false);\r\n    }\r\n  }\r\n};\r\nconst setInputWidth = () => {\r\n  const pencileInput = document.getElementById(`pencil-input-${idRandom}`);\r\n  if (pencileInput) {\r\n    pencileInput.style.width = `${inputText.value.length * 16 + 48}px`;\r\n  }\r\n};\r\nconst clickPen = () => {\r\n  editMode.value = true;\r\n  emit('editModeEvent', true);\r\n};\r\n\r\nconst listenToKeyup = (event: any) => {\r\n  apiFeedbackError.value = false;\r\n  validation.value = handlerValidation(inputText.value, rexEngNum, noAllowedCharacter);\r\n  if (props.size === 'default') setInputWidth();\r\n  if (event.code === 'Escape') pressCancel();\r\n  if (!validation.value) {\r\n    showInvaildText.value = true;\r\n    emit('triggerInvalid', inputText.value);\r\n  }\r\n  if (inputText.value.length > 0 && validation.value) showInvaildText.value = false;\r\n};\r\nwatch(\r\n  () => props.text,\r\n  (n) => {\r\n    showText.value = n;\r\n    originalText.value = n;\r\n    handlerPencilTooltip(`pencil-text-${idRandom}`);\r\n  },\r\n);\r\n\r\nwatch(\r\n  () => editMode.value,\r\n  (n) => {\r\n    if (n) {\r\n      nextTick(() => {\r\n        const target = document.getElementById(`pencil-input-${idRandom}`);\r\n        inputText.value = showText.value;\r\n        if (props.size === 'default') setInputWidth();\r\n        target?.addEventListener('keyup', listenToKeyup);\r\n        target?.addEventListener('blur', pressEnter);\r\n        target?.focus();\r\n      });\r\n    } else {\r\n      const target = document.getElementById(`pencil-input-${idRandom}`);\r\n      target?.removeEventListener('keyup', listenToKeyup);\r\n      target?.removeEventListener('blur', pressEnter);\r\n      handlerPencilTooltip(`pencil-text-${idRandom}`);\r\n    }\r\n  },\r\n);\r\nwatch(\r\n  () => props.apiError,\r\n  (n) => {\r\n    if (n) {\r\n      apiFeedbackError.value = n;\r\n      editMode.value = true;\r\n      emit('editModeEvent', true);\r\n    }\r\n  },\r\n  { immediate: true },\r\n);\r\nonMounted(() => {\r\n  handlerPencilTooltip(`pencil-text-${idRandom}`);\r\n});\r\n\r\ndefineExpose({\r\n  pressCancel,\r\n});\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.pencil-input {\r\n  &__show {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: var(--text-justify);\r\n  }\r\n  &__text {\r\n    font-size: var(--text-size);\r\n    font-weight: bold;\r\n    color: #102e4d;\r\n    max-width: var(--text-max-width);\r\n    height: var(--height);\r\n    overflow: hidden;\r\n  }\r\n  &__icon {\r\n    color: $divider-bg-color;\r\n    margin-left: 16px;\r\n    cursor: pointer;\r\n    width: 30px;\r\n  }\r\n  &__wrapper {\r\n    border-bottom: 1px solid $primary-color;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: var(--text-justify);\r\n    width: var(--wrapper-width);\r\n    .ant-input {\r\n      border: none;\r\n      font-size: var(--text-size);\r\n      font-weight: bold;\r\n      color: #102e4d;\r\n      background-color: transparent;\r\n      padding: 0px;\r\n      max-width: var(--input-maxWidth);\r\n      &:focus-visible {\r\n        outline: none;\r\n        border: none;\r\n        box-shadow: none;\r\n      }\r\n      &:hover {\r\n        border: none;\r\n        box-shadow: none;\r\n      }\r\n    }\r\n    &.error {\r\n      border-bottom: 1px solid $danger-color;\r\n      .ant-input {\r\n        color: $danger-color;\r\n      }\r\n      .pencil-input__count {\r\n        color: $danger-color;\r\n      }\r\n    }\r\n  }\r\n  &__count {\r\n    font-size: var(--count-size);\r\n    color: #babec1;\r\n    margin-left: 16px;\r\n    font-weight: 400;\r\n  }\r\n  &__error {\r\n    color: $danger-color;\r\n    background-color: #ffffff;\r\n    font-size: 12px;\r\n    font-weight: 400;\r\n    height: 20px;\r\n    margin-top: 4px;\r\n  }\r\n}\r\n.display__dot {\r\n  white-space: pre;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n</style>\r\n"],"names":["smallStyle","defaultStyle","currentStyle","computed","props","showText","ref","originalText","inputText","editMode","apiFeedbackError","showInvaildText","idRandom","validation","isShowTooltip","countOversize","count","handlerPencilTooltip","tagElement","nextTick","element","styleWidth","pressCancel","emit","pressEnter","handlerValidation","rexEngNum","noAllowedCharacter","setInputWidth","pencileInput","clickPen","listenToKeyup","event","watch","n","target","onMounted","expose"],"mappings":"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"}