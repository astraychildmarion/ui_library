{"version":3,"file":"ChosenTag.stories-5dbc37e7.js","sources":["../../src/components/ChosenTag.vue"],"sourcesContent":["<template>\r\n  <div class=\"multiTag-input__outer\" :class=\"`multiTag-input-${idRandom}`\">\r\n    <div class=\"multiTag-input\" :class=\"{ edit: showPen || editMode, chosen: tagChosen }\">\r\n      <div v-if=\"readonly\">\r\n        <div class=\"multiTag-input__show\">\r\n          <div\r\n            v-if=\"displayText.length > 0\"\r\n            class=\"multiTag-input__text multiTag-input__text-readonly\"\r\n            data-e2e=\"multiTag-input-text\"\r\n            @click=\"clickTurnBlue\"\r\n          >\r\n            <Tooltip v-if=\"showTooltip\" placement=\"top\" :color=\"`#051322e6`\">\r\n              <template #title>\r\n                <div>{{ displayText }}</div>\r\n              </template>\r\n              <div>{{ displayText }}</div>\r\n            </Tooltip>\r\n            <template v-else>\r\n              <div>{{ displayText }}</div>\r\n            </template>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div v-else>\r\n        <div\r\n          v-if=\"!editMode\"\r\n          class=\"multiTag-input__show\"\r\n          @mouseenter=\"showPenHandler\"\r\n          @mouseleave=\"showPenHandler\"\r\n        >\r\n          <div\r\n            v-if=\"displayText.length > 0\"\r\n            class=\"multiTag-input__text\"\r\n            data-e2e=\"multiTag-input-text\"\r\n            @click=\"clickTurnBlue\"\r\n          >\r\n            <Tooltip v-if=\"showTooltip\" placement=\"top\" :color=\"`#051322e6`\">\r\n              <template #title>\r\n                <div>{{ displayText }}</div>\r\n              </template>\r\n              <div>{{ displayText }}</div>\r\n            </Tooltip>\r\n            <template v-else>\r\n              <div>{{ displayText }}</div>\r\n            </template>\r\n          </div>\r\n          <div class=\"multiTag-input__icon\" @click=\"clickPen\">\r\n            <div v-show=\"showPen && !tagChosen\" data-e2e=\"multiTag-pencil\">\r\n              <EditOutlined style=\"color: #5c666f; font-size: 14px\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div v-show=\"editMode\" class=\"multiTag-input__wrapper\">\r\n          <Input\r\n            :id=\"`multiTag-${idRandom}`\"\r\n            v-model:value=\"inputText\"\r\n            data-e2e=\"multiTag-input\"\r\n            @pressEnter=\"pressEnter\"\r\n            @keydown=\"checkKeydown\"\r\n            @paste=\"checkPaste\"\r\n          />\r\n          <div class=\"multiTag-input__icon\" data-e2e=\"multiTag-trash\" @click=\"clickTrash\">\r\n            <DeleteOutlined style=\"color: #5c666f; font-size: 13px; margin-right: 8px\" />\r\n          </div>\r\n          <div class=\"multiTag-input__count\" :class=\"{ error: countOversize }\">\r\n            {{ count }}/{{ limitCount }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <ConfirmModal\r\n    :is-show=\"showModal\"\r\n    :title=\"modalTitle\"\r\n    :content=\"modalContent\"\r\n    confirm-type=\"warning\"\r\n    @clickConfirm=\"clickModalConfirm\"\r\n    @clickCancel=\"clickModalCancel\"\r\n  />\r\n</template>\r\n<script lang=\"ts\" setup>\r\nimport { ref, watch, computed, nextTick, onMounted } from 'vue';\r\nimport { Input, Tooltip } from 'ant-design-vue';\r\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons-vue';\r\nimport ConfirmModal from './ConfirmModal.vue';\r\nimport {\r\n  rexEngNumZh,\r\n  excludeRexEngNumZh,\r\n  noAllowedCharacter,\r\n  handlerValidation,\r\n  checkKeydownValidation,\r\n  checkPasteValidation,\r\n} from '../utils/rexValidation';\r\nimport type { tagEditModeType } from './interface';\r\n\r\ninterface Props {\r\n  text?: string;\r\n  limitCount?: number;\r\n  readonly?: boolean;\r\n}\r\n\r\nconst props = withDefaults(defineProps<Props>(), {\r\n  text: 'tag',\r\n  limitCount: 50,\r\n  readonly: false,\r\n});\r\n\r\ninterface Emits {\r\n  // eslint-disable-next-line no-unused-vars\r\n  (e: 'renameTag', payload: { old: string; new: string }): void;\r\n  // eslint-disable-next-line no-unused-vars\r\n  (e: 'deleteTag', payload: string): void;\r\n  // eslint-disable-next-line no-unused-vars\r\n  (e: 'chooseTag', payload: string): void;\r\n  // eslint-disable-next-line no-unused-vars\r\n  (e: 'cancelTag', payload: string): void;\r\n  // eslint-disable-next-line no-unused-vars\r\n  (e: 'editModeEvent', payload: tagEditModeType): void;\r\n}\r\nconst emit = defineEmits<Emits>();\r\n// create unique id for element\r\nconst idRandom = Math.floor(Math.random() * 100000);\r\nconst displayText = ref<string>(props.text);\r\nconst inputText = ref<string>('');\r\nconst showPen = ref<boolean>(false);\r\nconst editMode = ref<boolean>(false);\r\nconst tagChosen = ref<boolean>(false);\r\nconst countOversize = ref<boolean>(false);\r\n// for confirm modal\r\nconst deleteTagTitle = 'Delete tag';\r\nconst renameTagTitle = 'Rename tag';\r\nconst deleteTagText = 'Are you sure you want to delete the tag?';\r\nconst renameTagText = 'Are you sure you want to rename the tag?';\r\nconst showModal = ref<boolean>(false);\r\nconst modalTitle = ref<string>('');\r\nconst modalContent = ref<string>('');\r\nconst count = computed(() => inputText.value.length);\r\nconst validation = ref<boolean>(true);\r\nconst showTooltip = ref<boolean>(false);\r\nconst checkEllipsis = () => {\r\n  nextTick(() => {\r\n    const element = document.querySelector(\r\n      `.multiTag-input-${idRandom} .multiTag-input__text`,\r\n    )?.clientWidth;\r\n    if (element && element < 136) {\r\n      showTooltip.value = false;\r\n    } else {\r\n      showTooltip.value = true;\r\n    }\r\n  });\r\n};\r\nconst setInputWidth = () => {\r\n  const multiTag = document.getElementById(`multiTag-${idRandom}`);\r\n  if (multiTag) {\r\n    multiTag.style.width = `${inputText.value.length * 6 + 24}px`;\r\n  }\r\n};\r\nconst clickTurnBlue = () => {\r\n  tagChosen.value = !tagChosen.value;\r\n  if (tagChosen.value) {\r\n    emit('chooseTag', displayText.value);\r\n  } else {\r\n    emit('cancelTag', displayText.value);\r\n  }\r\n};\r\nconst clickPen = () => {\r\n  editMode.value = true;\r\n  showPen.value = false;\r\n  inputText.value = displayText.value;\r\n  setInputWidth();\r\n  if (inputText.value.length > props.limitCount) countOversize.value = true;\r\n  nextTick(() => {\r\n    document.getElementById(`multiTag-${idRandom}`)?.focus();\r\n  });\r\n};\r\nconst clickTrash = () => {\r\n  modalTitle.value = deleteTagTitle;\r\n  modalContent.value = deleteTagText;\r\n  showModal.value = true;\r\n};\r\nconst showPenHandler = () => {\r\n  showPen.value = !showPen.value;\r\n};\r\nconst pressCancel = () => {\r\n  editMode.value = false;\r\n  inputText.value = displayText.value;\r\n  countOversize.value = false;\r\n  validation.value = true;\r\n  checkEllipsis();\r\n};\r\nconst pressEnter = () => {\r\n  validation.value = handlerValidation(inputText.value, rexEngNumZh, noAllowedCharacter);\r\n  if (\r\n    inputText.value.length <= props.limitCount &&\r\n    displayText.value !== inputText.value &&\r\n    validation.value &&\r\n    inputText.value.length > 0\r\n  ) {\r\n    modalTitle.value = renameTagTitle;\r\n    modalContent.value = renameTagText;\r\n    showModal.value = true;\r\n  } else if (displayText.value === inputText.value) pressCancel();\r\n};\r\nconst clickModalCancel = () => {\r\n  pressCancel();\r\n  showModal.value = false;\r\n};\r\nconst clickModalConfirm = () => {\r\n  if (modalTitle.value === deleteTagTitle) {\r\n    emit('deleteTag', displayText.value);\r\n  } else {\r\n    const obj = { old: displayText.value, new: inputText.value };\r\n    emit('renameTag', obj);\r\n    checkEllipsis();\r\n  }\r\n  editMode.value = false;\r\n  countOversize.value = false;\r\n  showModal.value = false;\r\n};\r\n\r\nconst keyupChecker = (event: any) => {\r\n  validation.value = handlerValidation(inputText.value, rexEngNumZh, noAllowedCharacter);\r\n  setInputWidth();\r\n  if (event.code === 'Escape') pressCancel();\r\n  else if (inputText.value.length <= props.limitCount) {\r\n    countOversize.value = false;\r\n  } else {\r\n    countOversize.value = true;\r\n  }\r\n};\r\n\r\nconst checkKeydown = (e: any) => {\r\n  checkKeydownValidation(noAllowedCharacter, excludeRexEngNumZh, e);\r\n};\r\nconst checkPaste = (e: any) => {\r\n  checkPasteValidation(rexEngNumZh, e);\r\n};\r\n\r\nconst checkClickPlace = (event: any) => {\r\n  const list = event.composedPath();\r\n  const classList = list.filter((item: any) => typeof item.className === 'string');\r\n  // checkClickCurrentTag: user did not click any tag or modal, should trigger pressEnter\r\n  const checkClickCurrentTag = classList.filter(\r\n    (element: any) =>\r\n      element.className.indexOf(`multiTag-input-${idRandom}`) > -1 ||\r\n      element.className.indexOf('ant-modal') > -1,\r\n  );\r\n  // checkClickOtherTags:\r\n  // user clicks 1 tag and click other tags should cancel current tag's edit mode\r\n  const checkClickOtherTags = classList.filter(\r\n    (element: any) =>\r\n      element.className.indexOf(`multiTag-input-${idRandom}`) === -1 &&\r\n      element.className.indexOf('multiTag-input__outer') > -1,\r\n  );\r\n  if (checkClickOtherTags.length > 0) {\r\n    pressCancel();\r\n  } else if (checkClickCurrentTag.length < 1) {\r\n    validation.value = handlerValidation(inputText.value, rexEngNumZh, noAllowedCharacter);\r\n    if (\r\n      (inputText.value.length > props.limitCount)\r\n        || inputText.value.length === 0\r\n        || !validation.value\r\n      ) {\r\n      pressCancel();\r\n    } else pressEnter();\r\n  }\r\n};\r\nonMounted(() => {\r\n  checkEllipsis();\r\n});\r\nwatch(\r\n  () => props.text,\r\n  (n) => {\r\n    displayText.value = n;\r\n  },\r\n);\r\nwatch(\r\n  () => editMode.value,\r\n  (n) => {\r\n    emit('editModeEvent', { element: `multiTag-input-${idRandom}`, edit: n });\r\n    const target = document.getElementById(`multiTag-${idRandom}`);\r\n    if (n) {\r\n      target?.addEventListener('keyup', keyupChecker);\r\n      document?.addEventListener('click', checkClickPlace);\r\n    } else {\r\n      target?.removeEventListener('keyup', keyupChecker);\r\n      document?.removeEventListener('click', checkClickPlace);\r\n    }\r\n  },\r\n);\r\n</script>\r\n<style lang=\"scss\">\r\n.multiTag-input {\r\n  background-color: $chosenTag-bg;\r\n  border: 1px solid $chosenTag-border;\r\n  border-radius: 16px;\r\n  width: fit-content;\r\n  max-width: 220px;\r\n  height: 24px;\r\n  &.edit {\r\n    background-color: $chosenTag-chosen-border;\r\n    border: 1px solid $chosenTag-chosen-border;\r\n  }\r\n  &.chosen {\r\n    background-color: $chosenTag-chosen-bg;\r\n    border: 1px solid $chosenTag-chosen-border;\r\n    .multiTag-input__text {\r\n      color: $chosenTag-chosen-input;\r\n    }\r\n  }\r\n  &__show {\r\n    display: flex;\r\n    align-items: center;\r\n    line-break: anywhere;\r\n    padding-left: 8px;\r\n  }\r\n  &__wrapper {\r\n    display: flex;\r\n    .ant-input {\r\n      border: none;\r\n      &:hover {\r\n        border: none;\r\n        box-shadow: none;\r\n      }\r\n    }\r\n    input {\r\n      background-color: transparent;\r\n      font-size: 12px;\r\n      padding: 2px 0px 2px 16px;\r\n      min-width: 24px;\r\n      max-width: 136px;\r\n      color: $chosenTag-count-color;\r\n      &:focus-visible {\r\n        outline: none;\r\n        border: none;\r\n        box-shadow: none;\r\n      }\r\n    }\r\n  }\r\n  &__width-control {\r\n    position: relative;\r\n  }\r\n  &__text {\r\n    color: $chosenTag-color;\r\n    font-size: 12px;\r\n    cursor: pointer;\r\n    padding-left: 8px;\r\n    height: 24px;\r\n    overflow: hidden;\r\n    font-weight: normal;\r\n    max-width: 136px;\r\n    &-readonly {\r\n      padding-right: 16px;\r\n    }\r\n    > div {\r\n      overflow: hidden;\r\n      white-space: nowrap;\r\n      text-overflow: ellipsis;\r\n      line-height: 22px;\r\n    }\r\n  }\r\n  &__count {\r\n    color: $chosenTag-count-color;\r\n    font-size: 12px;\r\n    padding-right: 16px;\r\n    line-height: 24px;\r\n    height: 24px;\r\n    font-weight: normal;\r\n    &.error {\r\n      color: $danger-color;\r\n    }\r\n  }\r\n  &__icon {\r\n    width: 20px;\r\n    cursor: pointer;\r\n    padding: 0 2px;\r\n    line-height: 24px;\r\n    position: relative;\r\n    right: 0px;\r\n    top: -2px;\r\n  }\r\n}\r\n</style>\r\n"],"names":["idRandom","displayText","ref","props","inputText","showPen","editMode","tagChosen","countOversize","deleteTagTitle","renameTagTitle","deleteTagText","renameTagText","showModal","modalTitle","modalContent","count","computed","validation","showTooltip","checkEllipsis","nextTick","element","_a","setInputWidth","multiTag","clickTurnBlue","emit","clickPen","clickTrash","showPenHandler","pressCancel","pressEnter","handlerValidation","rexEngNumZh","noAllowedCharacter","clickModalCancel","clickModalConfirm","obj","keyupChecker","event","checkKeydown","checkKeydownValidation","excludeRexEngNumZh","checkPaste","checkPasteValidation","checkClickPlace","classList","item","checkClickCurrentTag","onMounted","watch","n","target"],"mappings":"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"}