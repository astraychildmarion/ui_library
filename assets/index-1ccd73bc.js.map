{"version":3,"file":"index-1ccd73bc.js","sources":["../../node_modules/ant-design-vue/es/vc-resize-observer/index.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport ResizeObserver from 'resize-observer-polyfill';\nimport { defineComponent, getCurrentInstance, onMounted, onUnmounted, onUpdated, reactive, watch } from 'vue';\nimport { findDOMNode } from '../_util/props-util';\nexport default defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'ResizeObserver',\n  props: {\n    disabled: Boolean,\n    onResize: Function\n  },\n  emits: ['resize'],\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var state = reactive({\n      width: 0,\n      height: 0,\n      offsetHeight: 0,\n      offsetWidth: 0\n    });\n    var currentElement = null;\n    var resizeObserver = null;\n    var destroyObserver = function destroyObserver() {\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n        resizeObserver = null;\n      }\n    };\n    var onResize = function onResize(entries) {\n      var onResize = props.onResize;\n      var target = entries[0].target;\n      var _target$getBoundingCl = target.getBoundingClientRect(),\n        width = _target$getBoundingCl.width,\n        height = _target$getBoundingCl.height;\n      var offsetWidth = target.offsetWidth,\n        offsetHeight = target.offsetHeight;\n      /**\n       * Resize observer trigger when content size changed.\n       * In most case we just care about element size,\n       * let's use `boundary` instead of `contentRect` here to avoid shaking.\n       */\n      var fixedWidth = Math.floor(width);\n      var fixedHeight = Math.floor(height);\n      if (state.width !== fixedWidth || state.height !== fixedHeight || state.offsetWidth !== offsetWidth || state.offsetHeight !== offsetHeight) {\n        var size = {\n          width: fixedWidth,\n          height: fixedHeight,\n          offsetWidth: offsetWidth,\n          offsetHeight: offsetHeight\n        };\n        _extends(state, size);\n        if (onResize) {\n          // defer the callback but not defer to next frame\n          Promise.resolve().then(function () {\n            onResize(_objectSpread(_objectSpread({}, size), {}, {\n              offsetWidth: offsetWidth,\n              offsetHeight: offsetHeight\n            }), target);\n          });\n        }\n      }\n    };\n    var instance = getCurrentInstance();\n    var registerObserver = function registerObserver() {\n      var disabled = props.disabled;\n      // Unregister if disabled\n      if (disabled) {\n        destroyObserver();\n        return;\n      }\n      // Unregister if element changed\n      var element = findDOMNode(instance);\n      var elementChanged = element !== currentElement;\n      if (elementChanged) {\n        destroyObserver();\n        currentElement = element;\n      }\n      if (!resizeObserver && element) {\n        resizeObserver = new ResizeObserver(onResize);\n        resizeObserver.observe(element);\n      }\n    };\n    onMounted(function () {\n      registerObserver();\n    });\n    onUpdated(function () {\n      registerObserver();\n    });\n    onUnmounted(function () {\n      destroyObserver();\n    });\n    watch(function () {\n      return props.disabled;\n    }, function () {\n      registerObserver();\n    }, {\n      flush: 'post'\n    });\n    return function () {\n      var _slots$default;\n      return (_slots$default = slots.default) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots)[0];\n    };\n  }\n});"],"names":["ResizeObserver","defineComponent","props","_ref","slots","state","reactive","currentElement","resizeObserver","destroyObserver","onResize","entries","target","_target$getBoundingCl","width","height","offsetWidth","offsetHeight","fixedWidth","fixedHeight","size","_extends","_objectSpread","instance","getCurrentInstance","registerObserver","disabled","element","findDOMNode","elementChanged","onMounted","onUpdated","onUnmounted","watch","_slots$default"],"mappings":"4OAKA,MAAAA,EAAeC,EAAgB,CAC7B,aAAc,CACZ,KAAM,CACP,EACD,KAAM,iBACN,MAAO,CACL,SAAU,QACV,SAAU,QACX,EACD,MAAO,CAAC,QAAQ,EAChB,MAAO,SAAeC,EAAOC,EAAM,CACjC,IAAIC,EAAQD,EAAK,MACbE,EAAQC,EAAS,CACnB,MAAO,EACP,OAAQ,EACR,aAAc,EACd,YAAa,CACnB,CAAK,EACGC,EAAiB,KACjBC,EAAiB,KACjBC,EAAkB,UAA2B,CAC3CD,IACFA,EAAe,WAAU,EACzBA,EAAiB,KAEzB,EACQE,EAAW,SAAkBC,EAAS,CACxC,IAAID,EAAWR,EAAM,SACjBU,EAASD,EAAQ,CAAC,EAAE,OACpBE,EAAwBD,EAAO,sBAAuB,EACxDE,EAAQD,EAAsB,MAC9BE,EAASF,EAAsB,OAC7BG,EAAcJ,EAAO,YACvBK,EAAeL,EAAO,aAMpBM,EAAa,KAAK,MAAMJ,CAAK,EAC7BK,EAAc,KAAK,MAAMJ,CAAM,EACnC,GAAIV,EAAM,QAAUa,GAAcb,EAAM,SAAWc,GAAed,EAAM,cAAgBW,GAAeX,EAAM,eAAiBY,EAAc,CAC1I,IAAIG,EAAO,CACT,MAAOF,EACP,OAAQC,EACR,YAAaH,EACb,aAAcC,CACxB,EACQI,EAAShB,EAAOe,CAAI,EAChBV,GAEF,QAAQ,UAAU,KAAK,UAAY,CACjCA,EAASY,EAAcA,EAAc,CAAE,EAAEF,CAAI,EAAG,CAAA,EAAI,CAClD,YAAaJ,EACb,aAAcC,CAC5B,CAAa,EAAGL,CAAM,CACtB,CAAW,EAGX,EACQW,EAAWC,IACXC,EAAmB,UAA4B,CACjD,IAAIC,EAAWxB,EAAM,SAErB,GAAIwB,EAAU,CACZjB,IACA,OAGF,IAAIkB,EAAUC,EAAYL,CAAQ,EAC9BM,EAAiBF,IAAYpB,EAC7BsB,IACFpB,IACAF,EAAiBoB,GAEf,CAACnB,GAAkBmB,IACrBnB,EAAiB,IAAIR,EAAeU,CAAQ,EAC5CF,EAAe,QAAQmB,CAAO,EAEtC,EACI,OAAAG,EAAU,UAAY,CACpBL,GACN,CAAK,EACDM,EAAU,UAAY,CACpBN,GACN,CAAK,EACDO,EAAY,UAAY,CACtBvB,GACN,CAAK,EACDwB,EAAM,UAAY,CAChB,OAAO/B,EAAM,QACnB,EAAO,UAAY,CACbuB,GACN,EAAO,CACD,MAAO,MACb,CAAK,EACM,UAAY,CACjB,IAAIS,EACJ,OAAQA,EAAiB9B,EAAM,WAAa,MAAQ8B,IAAmB,OAAS,OAASA,EAAe,KAAK9B,CAAK,EAAE,CAAC,CAC3H,CACG,CACH,CAAC","x_google_ignoreList":[0]}